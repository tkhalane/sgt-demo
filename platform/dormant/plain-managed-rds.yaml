apiVersion: rds.aws.upbound.io/v1beta2
kind: Instance
metadata:
  annotations:
    meta.upbound.io/example-id: rds/v1beta1/instance
    uptest.upbound.io/timeout: "3600"
  labels:
    testing.upbound.io/example-name: example-dbinstance
  name: example-dbinstance-sgt
spec:
  forProvider:
    allocatedStorage: 20
    autoGeneratePassword: true
    autoMinorVersionUpgrade: true
    backupRetentionPeriod: 14
    backupWindow: 09:46-10:16
    dbName: example
    engine: postgres
    engineVersion: "16.1"
    instanceClass: db.t3.micro
    kmsKeyIdSelector:
      matchLabels:
        testing.upbound.io/example-name: sample-key
    maintenanceWindow: Mon:00:00-Mon:03:00
    passwordSecretRef:
      key: password
      name: example-dbinstance
      namespace: upbound-system
    publiclyAccessible: false
    region: eu-west-1
    skipFinalSnapshot: true
    storageEncrypted: true
    storageType: gp2
    username: adminuser
  writeConnectionSecretToRef:
    name: example-dbinstance-out
    namespace: default
---
# - name: vpc
# base:
# apiVersion: ec2.aws.upbound.io/v1beta1
# kind: VPC
# spec:
# forProvider:
#   cidrBlock: "10.0.0.0/16"
#   enableDnsSupport: true
#   enableDnsHostnames: true
#   region: af-south-1
# - name: subnet1
# base:
# apiVersion: ec2.aws.upbound.io/v1beta1
# kind: Subnet
# spec:
# forProvider:
#   region: af-south-1
#   cidrBlock: "10.0.1.0/24"
#   availabilityZone: af-south-1a
#   vpcIdSelector:
#     matchControllerRef: true
# - name: subnet2
# base:
# apiVersion: ec2.aws.upbound.io/v1beta1
# kind: Subnet
# spec:
# forProvider:
#   region: af-south-1
#   cidrBlock: "10.0.2.0/24"
#   availabilityZone: af-south-1b
#   vpcIdSelector:
#     matchControllerRef: true
# - name: subnetGroup
      # base:
      #   apiVersion: rds.aws.upbound.io/v1beta1
      #   kind: SubnetGroup
      #   metadata:
      #     name: sgt-db-subnet-group 
      #   spec:
      #     forProvider:
      #     region: af-south-1
      #     subnetIdSelector:
      #       matchControllerRef: true